import type {AdapterResolver} from './resolver';
import type {ValidationAdapter} from '@typeschema/core';

import {memoize} from '@typeschema/core';

import {select} from './selector';

{{#each adapters}}
const import{{pascalCase name}}ValidationAdapter = memoize(async () => {
  try {
    const {validationAdapter} = await import(
      /* webpackIgnore: true */ '@typeschema/{{name}}'
    );
    return validationAdapter;
  } catch (error) {
    throw error;
  }
});

{{/each}}
export const validationAdapter: ValidationAdapter<AdapterResolver> = select({
{{#each adapters}}
{{#if hasModule.validation}}
  {{camelCase name}}: async schema => (await import{{pascalCase name}}ValidationAdapter())(schema),
{{else}}
  {{camelCase name}}: async schema => {
    throw new Error('Unsupported');
  },
{{/if}}
{{/each}}
});
