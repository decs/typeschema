// eslint-disable-next-line @typescript-eslint/no-unused-vars
import type {AdapterResolvers} from './adapters';
import type {AdapterResolver} from './resolver';
import type {SerializationAdapter} from '@typeschema/core';

// eslint-disable-next-line @typescript-eslint/no-unused-vars
import {memoize, unsupportedAdapter} from '@typeschema/core';

import {select} from './selector';

{{#each singleAdapters}}
{{#if hasModule.serialization}}
const import{{pascalCase name}}SerializationAdapter = memoize(async () => {
  const {serializationAdapter} = await import('@typeschema/{{name}}');
  return serializationAdapter;
});

{{/if}}
{{/each}}
export const serializationAdapter: SerializationAdapter<AdapterResolver> = select({
{{#each singleAdapters}}
{{#if hasModule.serialization}}
  {{camelCase name}}: async schema => (await import{{pascalCase name}}SerializationAdapter())(schema),
{{else}}
  {{camelCase name}}: unsupportedAdapter<AdapterResolvers['{{camelCase name}}']>('@typeschema/{{name}}'),
{{/if}}
{{/each}}
});
